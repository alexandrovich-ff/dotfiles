#!/bin/sh

# vim: filetype=dmenu
#  ____  __  __ _____ _   _ _   _       ____  _____ ____ ___  ____  ____  
# |  _ \|  \/  | ____| \ | | | | |     |  _ \| ____/ ___/ _ \|  _ \|  _ \ 
# | | | | |\/| |  _| |  \| | | | |_____| |_) |  _|| |  | | | | |_) | | | |
# | |_| | |  | | |___| |\  | |_| |_____|  _ <| |__| |__| |_| |  _ <| |_| |
# |____/|_|  |_|_____|_| \_|\___/      |_| \_\_____\____\___/|_| \_\____/ 
#
# –°–∫—Ä–∏–ø—Ç –∑–∞–ø–∏—Å–∏ —ç–∫—Ä–∞–Ω–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
# –ù–∞–ø–∏—Å–∞–Ω: @alexandrovich.ff
# –í–µ–±-—Å–∞–π—Ç: http://malikov.red

updateicon() { \
    echo "$1" > /tmp/recordingicon
    pkill -RTMIN+2 i3blocks
    }

killrecording() {
    recpid="$(cat /tmp/recordingpid)"
    kill -15 "$recpid"
    rm -f /tmp/recordingpid
    updateicon ""
    pkill -RTMIN+2 i3blocks
    sleep 3
    kill -9 "$recpid"
    exit
    }

screencast() { \
    ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -i $DISPLAY \
    -f alsa -i default \
    -r 30 \
    -c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏èüéôÔ∏è"
}

video() { ffmpeg \
    -f x11grab \
    -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -i $DISPLAY \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "‚è∫Ô∏è"
}

webcamhidef() { ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
}

webcam() { ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    echo $! > /tmp/recordingpid
    updateicon "üé•"
}


audio() { \
    ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
    echo $! > /tmp/recordingpid
    updateicon "üéôÔ∏è"
}

askrecording() { \
    choice=$(printf "screencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∑–∞–ø–∏—Å–∏:")
    case "$choice" in
        screencast) screencast;;
        audio) audio;;
        video) video;;
        webcam) webcam;;
        "webcam (hi-def)") webcamhidef;;
    esac
}

asktoend() { \
    response=$(printf "–ù–µ—Ç\\n–î–∞" | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "–ó–∞–ø–∏—Å—å –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å?") &&
    [ "$response" = "–î–∞" ] &&  killrecording
}


case "$1" in
    screencast) screencast;;
    audio) audio;;
    video) video;;
    kill) killrecording;;
    *) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording;;
esac