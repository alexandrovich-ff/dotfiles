#!/bin/sh

# vim: filetype=dmenu
#  ____  __  __ _____ _   _ _   _       __  __  ___  _   _ _   _ _____ 
# |  _ \|  \/  | ____| \ | | | | |     |  \/  |/ _ \| | | | \ | |_   _|
# | | | | |\/| |  _| |  \| | | | |_____| |\/| | | | | | | |  \| | | |  
# | |_| | |  | | |___| |\  | |_| |_____| |  | | |_| | |_| | |\  | | |  
# |____/|_|  |_|_____|_| \_|\___/      |_|  |_|\___/ \___/|_| \_| |_|  
#
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–Ω–µ—à–Ω–∏—Ö –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–µ–π
# –ù–∞–ø–∏—Å–∞–Ω: @alexandrovich.ff
# –í–µ–±-—Å–∞–π—Ç: http://malikov.red

pgrep -x dmenu && exit

getmount() { \
	[ -z "$chosen" ] && exit 1
	mp="$(find $1 2>/dev/null | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–∫—É –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")"
	[ "$mp" = "" ] && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "–ù–µ—Ç\\n–î–∞" | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "$mp –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—Ç—å –µ–≥–æ?")
		[ "$mkdiryn" = "–î–∞" ] && (mkdir -p "$mp" || gksu -S mkdir -p "$mp")
	fi
	}

mountusb() { \
	chosen="$(echo "$usbdrives" | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "–ö–∞–∫–æ–π –¥–∏—Å–∫ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å?" | awk '{print $1}')"
	sudo -A mount "$chosen" 2>/dev/null && notify-send -i "$PIX/usb.svg" "$chosen mounted." && exit 0
        alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$2=="part"&&$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not \( -path *%s -prune \) \ \n",$3}')
	getmount "/mnt /media /mount /home -maxdepth 5 -type d $alreadymounted"
	partitiontype="$(lsblk -no "fstype" "$chosen")"
	case "$partitiontype" in
		"vfat") gksu -S mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
                *) sudo -A mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" "$mp";;
	esac
	notify-send "üíª USB —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω" "$chosen —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –≤ $mp."
	}

mountandroid() { \
	chosen=$(echo "$anddrives" | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "–ö–∞–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ Android?" | cut -d : -f 1)
	getmount "$HOME -maxdepth 3 -type d"
	simple-mtpfs --device "$chosen" "$mp"
	notify-send "ü§ñ Android —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω" "Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ $mp."
	}

asktype() { \
	case $(printf "USB\\nAndroid" | ::dmenu -x 15 -y 40 -h 28 -w 1000 -i -p "–ü–æ–¥–∫–ª—é—á–∏—Ç—å USB-–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ Android?") in
		USB) mountusb ;;
		Android) mountandroid ;;
	esac
	}

anddrives=$(simple-mtpfs -l 2>/dev/null)
usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')"

if [ -z "$usbdrives" ]; then
	[ -z "$anddrives" ] && echo "USB-–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ Android –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã" && exit
	echo "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Android –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã."
	mountandroid
else
	if [ -z "$anddrives" ]; then
		echo "USB-–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω."
	       	mountusb
	else
		echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ–¥–∫–ª—é—á–∞–µ–º—ã–π USB-–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å –∏ Android-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ."
		asktype
	fi
fi
